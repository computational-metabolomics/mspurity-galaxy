<tool id="average_x_frag_spectra" name="Average and filter fragmentation spectra" version="0.0.1">
    <description>
        (Inter, Intra or All)
    </description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements">
    </expand>

 <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="Rscript"><![CDATA[
        average_fragmentation_spectra.R
            --out_rdata="$average_fragmentation_spectra_rdata"
            --out_peaklist="$peaklist_tsv"
            --pa="$pa"
            --av_level=$av.level
            --cores=\${GALAXY_SLOTS:-4}

            --minfrac=$minfrac
            --minnum=$minnum
            --ppm=$ppm

            --snr=$av.snr
            --ra=$av.ra
            

            --av=$function_average
            
            $sum_intensities



            $rmp
    ]]></command>
    <inputs>
        <param name="pa" type="data" label="purityA object" format="rdata"
               help="purityA object saved as 'pa' in a RData file (output from frag4feature tool)"/>
        <conditional name="av">
            <param name="level" type="select" label="Average and filter fragmentation spectra for each XCMS feature" help="">
                <option value="intra" selected="true">within a MS data file</option>
                <option value="inter">accross MS data files</option>
                <option value="all">within and accross MS data files (ignoring intra and inter relationships)</option>
            </param>
            <when value="intra">
                <param name="snr" type="float" value="0.0" label="Signal-to-noise threshold after averaging or summing" help="" />
                <param name="ra" type="float" min="0.0" max="1.0" value="0.0" label="Relative abundance threshold after averaging or summing" help="" />
            </when>
            <when value="inter">
                <param name="snr" type="float" value="0.0" label="Signal-to-noise threshold after averaging or summing" help="" />
                <param name="ra" type="float" min="0.0" max="1.0" value="0.0" label="Relative abundance threshold after averaging or summing" help="" />
            </when>
            <when value="all">
                <param name="snr" type="float" value="0.0" label="Signal-to-noise threshold after averaging or summing" help="" />
                <param name="ra" type="float" min="0.0" max="1.0" value="0.0" label="Relative abundance threshold after averaging or summing" help="" />
            </when>
        </conditional>
        <param name="function_noise" type="select" label="Function to calculate noise" help="">
            <option value="median" selected="true">median</option>
            <option value="mean">mean</option>
            <option value="mad">mad</option>
        </param>
        <param name="minfrac" type="float" min="0.0" max="1.0" value="0.5" label="Minimum fraction (i.e. percentage) of (averaged) scans a fragment peak has to be present in." help="" />

        <param name="minnum" type="integer" value="1" label="Minimum number of (averaged) fragmentation scans for a fragmentation event (precursor)." help="" />
        <param name="ppm" type="float" value="5.0" label="Ppm error tolerance" help="Maximum tolerated m/z deviation in parts per million." />
        <param name="sum_intensities" type="boolean" checked="false" truevalue="--sumi" falsevalue="" label="Sum intensities across (averaged) scans?"
               help="" />
        <param name="function_average" type="select" label="Function to calculate the average intensity, m/z and SNR values across (averaged) scans after filtering." help="This is ignored for intensities when intensities are summed." >
            <option value="median" selected="true">median</option>
            <option value="mean">mean</option>
        </param>
        
        <param name="rmp" type="boolean" checked="true" truevalue="--rmp" falsevalue="" label="Remove peaks that do not meet the filtering criteria. Otherwise peaks will be flagged instead."
               help="" />
    </inputs>
    <outputs>
        <data name="average_fragmentation_spectra_rdata" format="rdata" label="${tool.name} (${av.level}) on ${on_string}: RData" />
        <data name="peaklist_tsv" format="tsv" label="${tool.name} (${av.level}) on ${on_string}: peaklist" />
    </outputs>
    <tests>
        <test>
            <param name="av|level" value="intra" />
            <param name="pa" value="frag4feature_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" />
            <output name="average_fragmentation_spectra_rdata" file="average_intra_fragmentation_spectra_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" ftype="rdata" compare="sim_size" />
            <output name="peaklist_tsv" file="peaklist_msms_intra.tsv" ftype="tsv" />
        </test>
        <test>
            <param name="av|level" value="inter" />
            <param name="pa" value="average_intra_fragmentation_spectra_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" />
            <output name="average_fragmentation_spectra_rdata" file="average_inter_fragmentation_spectra_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" ftype="rdata" compare="sim_size" />
            <output name="peaklist_tsv" file="peaklist_msms_inter.tsv" ftype="tsv" />
        </test>
        <test>
            <param name="av|level" value="all" />
            <param name="pa" value="frag4feature_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" />
            <output name="average_fragmentation_spectra_rdata" file="average_all_fragmentation_spectra_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" ftype="rdata" compare="sim_size" />
            <output name="peaklist_tsv" file="peaklist_msms_all.tsv" ftype="tsv" />
        </test>
    </tests>
    
    <help><![CDATA[
=============================================================
Average Fragmentation Spectra
=============================================================
-----------
Description
-----------

Tool to . 


The data inputs are:

* 

See Bioconductor documentation for more details, functions:
msPurity::averageIntraFragSpectra()
msPurity::averageInterFragSpectra()
msPurity::averageAllFragSpectra()

-----------
Outputs
-----------
* average_x_fragmentation_spectra_rdata

    ]]></help>

<expand macro="citations" />

</tool>
