<tool id="mspurity_spectralmatching" name="msPurity.spectralMatching" version="0.1.3">
    <description>
        Perform spectral matching to MS/MS spectral libraries
    </description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements">
    </expand>


    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="Rscript"><![CDATA[
        spectralMatching.R
            --outDir=.
            --q_dbPth=$q_dbPth

            #if $custom_sqlite.custom_sqlite_select
                --library_db_pth=$custom_sqlite.library_db
                --library_sources=$custom_sqlite.library_sources
                --instrument_types=$custom_sqlite.instrument_types
            #else
                --library_sources=$custom_sqlite.library_sources
                --instrument_types=$custom_sqlite.instrument_types
            #end if

            --ra_thres_l=$advanced.ra_thres_l
            --ra_thres_q=$advanced.ra_thres_q
            --cores=\${GALAXY_SLOTS:-4}
            --pol=$pol
            --score_thres=$score_thres
            --ppm_tol_prod=$ppm_tol_prod
            --ppm_tol_prec=$ppm_tol_prec

            #if float($rt_tol) > 0.0
              --rttol=$rt_tol
            #end if

            --spectra_type_q=$spectra_type_q

            #if $advanced.match_method
              --match_method=$advanced.match_method
            #end if

            #if $advanced.topncond.topnbool
                --topn=$topn
            #end if

            #if $advanced.scan_ids
              --scan_ids='
                #for $i, $j in enumerate($advanced.scan_ids)
                    $j.scan_ids,
                #end for
                '
            #end if
            #if $create_new_database:
              --create_new_database
            #end if

    ]]></command>
    <inputs>
      <param name="score_thres" type="float" min="0" max="1" value="0.6"
               help="Score threshold"/>
    
    <section name="Query" title="Query spectra input and filters" expanded="True">
        <expand macro="sm_input" ql='Query' user="True" mspuritydatalib="False" msp="False"
                help="Query SQLite database - in the standard XCMS msPurity workflow - the output
                      of msPurity.createDatabase should be used here. However any SQLite database following the 
                      schema of xxx can be used as input"/>
        <expand macro="filters" ql="Query"/>
    </section>
    </inputs>
    <outputs>
        <data name="createMSP_output" format="msp" from_work_dir="lcmsms_spectra.msp" label="${tool.name} on ${on_string}: msp"/>
    </outputs>
    <tests>
        <test>
            <param name="method" value="all"/>
            <param name="rdata_input" value="frag4feature_output.RData"/>
            <output name="createMSP_output" file="createMSP_output_scans_all.msp"/>
        </test>
        <test>
            <param name="method" value="av_all"/>
            <param name="rdata_input" value="averageFragSpectra_output_all.RData"/>
            <output name="createMSP_output" file="createMSP_output_av_all.msp"/>
        </test>
        <test>
            <param name="method" value="av_all"/>
            <param name="rdata_input" value="averageFragSpectra_output_all.RData"/>
            <param name="metadata_cond|metadata_select" value="true"/>
            <param name="metadata_cond|metadata" value="createMSP_input_metadata.tsv"/>
            <param name="metadata_cond|metadata_cols" value="AC$CHROMATOGRAPHY: COLUMN_NAME, AC$MASS_SPECTROMETRY: ION_MODE, AC$MASS_SPECTROMETRY: MS_TYPE, CH$LINK: INCHIKEY, CH$LINK: PUBCHEM	CH$NAME
"/>
            <param name="xcms_group_cond|xcms_group_select" value="true"/>
            <param name="xcms_group_cond|xcms_groupids" value="8,12"/>
            <param name="metadata_cond|adduct_split" value="true"/>
            <output name="createMSP_output" file="createMSP_output_av_all_metadata.msp"/>
        </test>
        <test>
            <param name="method" value="av_all"/>
            <param name="rdata_input" value="averageFragSpectra_output_all.RData"/>
            <param name="xcms_group_cond|xcms_group_select" value="true"/>
            <param name="xcms_group_cond|xcms_groupids" value="8,12"/>
            <output name="createMSP_output" file="createMSP_output_av_all_and_all_xcms.msp"/>
        </test>
        <test>
            <param name="method" value="av_intra"/>
            <param name="rdata_input" value="averageFragSpectra_output_intra.RData"/>
            <output name="createMSP_output" file="createMSP_output_av_intra.msp"/>
        </test>
        <test>
            <param name="method" value="av_inter"/>
            <param name="rdata_input" value="averageFragSpectra_output_inter.RData"/>
            <output name="createMSP_output" file="createMSP_output_av_inter.msp"/>
        </test>
        <test>
            <param name="method" value="max"/>
            <param name="rdata_input" value="frag4feature_output.RData"/>
            <output name="createMSP_output" file="createMSP_output_max.msp"/>
        </test>
    </tests>
	<help><![CDATA[
------------------------------
Create MSP Files from msPurity
------------------------------

Description
-----------

| This tool will extract the MSMS spectra data from an msPurity-frag4feature object into a file with MSP data format.




Developers and contributors
---------------------------

- **Jordi Capellades (j.capellades.to@gmail.com) - Universitat Rovira i Virgili (SP)**
- **Andris Jankevics (a.jankevics@bham.ac.uk) - University of Birmingham (UK)**
- **Thomas N. Lawson (t.n.lawson@bham.ac.uk) - University of Birmingham (UK)**
- **Ralf Weber (r.j.weber@bham.ac.uk) - University of Birmingham (UK)**

	]]></help>

<expand macro="citations" />

</tool>
