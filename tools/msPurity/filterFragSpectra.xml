<tool id="mspurity_filterfragspectra" name="msPurity.filterFragSpectra" version="0.2.0">
    <description>
      Filter fragmentations spectra associated with an XCMS feature
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements">
    </expand>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="Rscript"><![CDATA[
        filterFragSpectra.R
            --out_rdata=$filterFragSpectra_output_rdata
            --out_peaklist_prec=$filterFragSpectra_output_prec_tsv
            --out_peaklist_frag=$filterFragSpectra_output_frag_tsv
            --pa="$pa"
            --ilim=$ilim
            --plim=$plim
            --ra=$ra
            --snr=$snr
            --snmeth=$snmeth
            $rmp
    ]]></command>
    <inputs>
        <param name="pa" type="data" 
               label="purityA object with fragmentation linked to XCMS features" format="rdata"
               help="purityA object saved as 'pa' in a RData file where fragmentation has
                     been linked to XCMS features(output from frag4feature tool)"/>
        <param name="plim" type="float" value="0.5" help=""
               label="Miniumum precursor ion purity of the associated precursor for
                     fragmentation spectra scan"  />
        <param name="ilim" type="float" value="0.0" label="Peak instensity threshold" help="" />
        <param name="ra" type="float" min="0.0" max="1.0" value="0.0" 
               label="Relative abundance threshold" help="" />
        <param name="snr" type="float" value="0.0" label="Signal-to-noise threshold" help="" />
        <param name="snmeth" type="select" label="Function to calculate noise." help="" >
            <option value="median" selected="true">median</option>
            <option value="mean">mean</option>
            <!-- <option value="mad">mad</option> -->
        </param>
        <param name="rmp" type="boolean" checked="false" truevalue="--remove_peaks" falsevalue="" 
               label="Remove peaks that do not meet the filtering criteria. 
                      Otherwise peaks will be flagged instead."
               help="" />
    </inputs>
    <outputs>
        <data name="filterFragSpectra_output_rdata" format="rdata" 
              label="${tool.name} on ${on_string}: RData" />
        <data name="filterFragSpectra_output_prec_tsv" format="tsv" 
              label="${tool.name} on ${on_string}: peaklist (precursors)" />
        <data name="filterFragSpectra_output_frag_tsv" format="tsv" 
              label="${tool.name} on ${on_string}: peaklist (fragments)" />
    </outputs>
    <tests>
        <test>
            <param name="pa" value="frag4feature_output.RData" />
            <output name="filterFragSpectra_output_rdata" 
                    file="filterFragSpectra_output.RData" ftype="rdata" compare="sim_size" />
            <output name="filterFragSpectra_output_prec_tsv" 
                    file="filterFragSpectra_output_prec.tsv" ftype="tsv" />
            <output name="filterFragSpectra_output_frag_tsv" 
                    file="filterFragSpectra_output_frag.tsv" ftype="tsv" />
        </test>
    </tests>

    <help><![CDATA[
=============================================================
Filter Fragmentation Spectra
=============================================================
-----------
Description
-----------

Tool to .


The data inputs are:

*

See Bioconductor documentation for more details, functions:
msPurity::filterFragSpectra()

-----------
Outputs
-----------
* filter_fragmentation_spectra_rdata
* peaklist_prec_tsv
* peaklist_frag_tsv

    ]]></help>

    <expand macro="citations" />

</tool>
