<tool id="assess_purity_msms" name="assess_purity_msms" version="0.0.9">
    <description>
        Assess the precursor ion purity for fragmentation spectra acquired from either a LC-MS/MS or DI-MS/MS (MSn) experiment
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements" />


 <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
        @COMMAND_RSCRIPT@/assess_purity_msms.R
            
            --out_dir=.
            #if $mzML_data.format == "mzML_files"
                #set mzML_files = '|'.join( [ str( $single_file ) for $single_file in $filesource ] )
                #set FileNames = '|'.join( [ str( $single_file.name ) for $single_file in $filesource ] )
                    --singlefile_galaxyPath='$mzML_files'
                    --singlefile_sampleName='$FileNames'
            #elif $mzML_data.format == "library"
                --mzML_files $__app__.config.user_library_import_dir/$__user_email__/$mzML_data.source
            #end if
            #if $AdvOptions.offsets.offsets == 'user'
                --minOffset=$AdvOptions.minoffset
                --maxOffset=$AdvOptions.maxoffset
            #end if

            --iwNorm=$AdvOptions.iw_norm
            --ilim=$AdvOptions.ilim

            --cores=\${GALAXY_SLOTS:-4}

            #if $nearest
                --nearest
            #end if

            #if $mostIntense
                --mostIntense
            #end if

            #if $AdvOptions.isotopes.isotopes == "exclude_default"
                --exclude_isotopes
            #elif $AdvOptions.isotopes.isotopes == "user"
                --exclude_isotopes
                --isotope_matrix=$AdvOptions.isotopes.im
            #end if

            @COMMAND_LOG_EXIT@

    ]]></command>
    <inputs>
        
        <conditional name="mzML_data">
            <param name="format" type="select" label="Choose the source for the dataset" >
                <option value="mzML_files" selected="true">.mzML files to check purity from</option>
                <option value="library">Library directory name (to be used with dimspy workflows) or path to
                                        to an individual .mzML file</option>
            </param>
            <when value="mzML_files">
                <param name="filesource" type="data" format="mzml" label="*.mzML files" multiple="true">
                </param> 
            </when>
            <when value="library">
                <param name="source" type="text"
                       size="40" label="Library directory containing *.mzml files
                                                                 or path to an individual *.mzML">
                    <validator type="empty_field" />
                </param>
            </when>
        </conditional>
        <!-- Choose how determine the precursor -->
        <param name="mostIntense" type="boolean" checked="true" label="Use most intense peak within isolation window for precursor?" 
              help="If yes, this will ignore the recorded precursor within the mzML file and use
              the most intense peak within the isolation window to calculate the precursor ion purity"/>
        
        <param name="nearest" type="boolean" checked="true" label="Use nearest full scan to determine precursor?" 
              help="If yes, this will use the neareset full scan to the fragmentation scan to determine what the m/z value
                    is of the precursor"/>

        <section name="AdvOptions" title="Advanced Options" expanded="False">
            <!-- -->
            <conditional name="offsets">
                <param name="offsets" type="select" label="offsets" >
                    <option value="auto" selected="true">Uses offsets determined in the mzML file</option>
                    <option value="user">User supplied offset values</option>
                </param>
                <when value="user">
                    <expand macro="offsets" />
                </when>
                <when value="auto">
                </when>
            </conditional>

            <!-- Parameters ilim, normalisation for isolation efficiency and the handling of isotopic peaks -->
            <expand macro="general_params" />
        </section>
    </inputs>
    <outputs>
        <data name="log" format="txt" label="assess.log.txt" from_work_dir="log.txt" />
        <data name="assess_purity" format="tsv" label="${tool.name}_on_${'|'.join( [ str( $single_file.name ) for $single_file in $filesource ] )}: tsv" 
              from_work_dir="purity_msms.tsv"/>  
        <data name="assess_purity_rdata" format="rdata" label="${tool.name}_on_${'|'.join( [ str( $single_file.name ) for $single_file in $filesource ] )}: RData" 
              from_work_dir="purity_msms.RData"/>
    </outputs>
    <tests>
       <test>
           <conditional name="mzML_data">
               <param name="format" value="mzML_files"/>
               <param name="source" >
                    <collection type="list">
                        <element name="LCMSMS_2.mzML" value="LCMSMS_2.mzML"/>
                        <element name="LCMSMS_1.mzML" value="LCMSMS_1.mzML"/>
                        <element name="LCMS_2.mzML" value="LCMS_2.mzML"/>
                        <element name="LCMS_1.mzML" value="LCMS_1.mzML"/>
                    </collection>
                </param>
            </conditional>
            <output name="assess_purity_msms" value="assess_purity_msms_output_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.tsv" />
            <output name="assess_purity_msms_rdata" value="assess_purity_msms_output_LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.RData" ftype="rdata" compare="sim_size"/>
        </test>
        <test>
            <param name="filesource" value="LCMSMS_1.mzML"/>
            <output name="assess_purity" value="assess_purity_msms_on_LCMSMS_1.tsv"/>
        </test>
    </tests>
    
    <help><![CDATA[
=============================================================
Assess precursor ion purity of MS/MS files
=============================================================
-----------
Description
-----------

Tool to assess precursor ion purity of MS/MS files

Data input of mzML files either from:

* A data collection of the mzML files containing MS/MS scans
* A path to a folder that has mzML files containing MS/MS scans

See Bioconductor documentation for more details about the function used, msPurity::purityA().

-----------
Outputs
-----------

* purity_msms: A tsv file of all the precursor ion purity score (and other metrics) of each fragmentation spectra
* purity_msms_rdata: The purityA object saved as an rdata file


    ]]></help>
<expand macro="citations" />
</tool>
